{"ast":null,"code":"import _createForOfIteratorHelper from \"C:/Users/Samuel/ProyectoWeb/React/Hackthon/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport set from \"./set.js\";\nexport default function intersection(values, ...others) {\n  values = new Set(values);\n  others = others.map(set);\n\n  var _iterator = _createForOfIteratorHelper(values),\n      _step;\n\n  try {\n    out: for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      const value = _step.value;\n\n      var _iterator2 = _createForOfIteratorHelper(others),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          const other = _step2.value;\n\n          if (!other.has(value)) {\n            values.delete(value);\n            continue out;\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return values;\n}","map":{"version":3,"sources":["C:/Users/Samuel/ProyectoWeb/React/Hackthon/node_modules/d3-array/src/intersection.js"],"names":["set","intersection","values","others","Set","map","out","value","other","has","delete"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,UAAhB;AAEA,eAAe,SAASC,YAAT,CAAsBC,MAAtB,EAA8B,GAAGC,MAAjC,EAAyC;AACtDD,EAAAA,MAAM,GAAG,IAAIE,GAAJ,CAAQF,MAAR,CAAT;AACAC,EAAAA,MAAM,GAAGA,MAAM,CAACE,GAAP,CAAWL,GAAX,CAAT;;AAFsD,6CAG7BE,MAH6B;AAAA;;AAAA;AAGtDI,IAAAA,GAHsD,EAGjD,oDAA4B;AAAA,YAAjBC,KAAiB;;AAAA,kDACXJ,MADW;AAAA;;AAAA;AAC/B,+DAA4B;AAAA,gBAAjBK,KAAiB;;AAC1B,cAAI,CAACA,KAAK,CAACC,GAAN,CAAUF,KAAV,CAAL,EAAuB;AACrBL,YAAAA,MAAM,CAACQ,MAAP,CAAcH,KAAd;AACA,qBAASD,GAAT;AACD;AACF;AAN8B;AAAA;AAAA;AAAA;AAAA;AAOhC;AAVqD;AAAA;AAAA;AAAA;AAAA;;AAWtD,SAAOJ,MAAP;AACD","sourcesContent":["import set from \"./set.js\";\n\nexport default function intersection(values, ...others) {\n  values = new Set(values);\n  others = others.map(set);\n  out: for (const value of values) {\n    for (const other of others) {\n      if (!other.has(value)) {\n        values.delete(value);\n        continue out;\n      }\n    }\n  }\n  return values;\n}\n"]},"metadata":{},"sourceType":"module"}